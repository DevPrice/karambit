name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    - id: node-cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ hashFiles('package-lock.json') }}
    - if: ${{ steps.node-cache.outputs.cache-hit != 'true' }}
      run: npm ci
    - id: tests-node-cache
      uses: actions/cache@v3
      with:
        path: integration/node_modules
        key: ${{ hashFiles('integration/package-lock.json') }}
    - if: ${{ steps.tests-node-cache.outputs.cache-hit != 'true' }}
      run: npm --prefix integration ci
    - id: build-cache
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ github.sha }}
    - if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
      run: npm run release

  upload-artifact:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    - id: node-cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ hashFiles('package-lock.json') }}
    - if: ${{ steps.node-cache.outputs.cache-hit != 'true' }}
      run: npm ci
    - id: build-cache
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ github.sha }}
    - if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
      name: Require cache
      run: exit 1
    - run: npm pack
    - uses: actions/upload-artifact@v3
      with:
        path: karambit-inject-*.tgz
        if-no-files-found: error

  publish-gpr:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          registry-url: 'https://npm.pkg.github.com'
      - uses: actions/checkout@v3
      - id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('package-lock.json') }}
      - if: ${{ steps.node-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - id: build-cache
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ github.sha }}
      - if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        name: Require cache
        run: exit 1
      - run: version-from-git --no-git-tag-version --no-commit-hooks
      - run: npm init -y --scope ${{ github.repository_owner }}
      - run: npm config set registry 'https://npm.pkg.github.com'
      - run: echo '//npm.pkg.github.com/:_authToken=${{ github.token  }}' > ${{ github.workspace }}/.npmrc
      - run: npm publish --tag development
        env:
          NODE_AUTH_TOKEN: ${{ github.token }}
